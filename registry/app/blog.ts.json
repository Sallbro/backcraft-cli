{
    "name": "blog",
    "language": "typescript",
    "dependencies": ["express", "dotenv"],
    "devDependencies": ["typescript", "ts-node-dev", "@types/node", "@types/express"],
    "registryDependencies": [],
    "files": [
      {
        "path": "app.ts",
        "content": "import express, { Application } from 'express';\nimport dotenv from 'dotenv';\nimport postRoutes from './routes/post.routes';\nimport userRoutes from './routes/user.routes';\n\ndotenv.config();\nconst app: Application = express();\nconst port = process.env.PORT || 3000;\n\napp.use(express.json());\n\napp.use('/api/posts', postRoutes);\napp.use('/api/users', userRoutes);\n\napp.listen(port, () => {\n  console.log(`ðŸš€ Blog server running on port ${port}`);\n});"
      },
      {
        "path": "types/post.type.ts",
        "content": "export interface Post {\n  id: number;\n  title: string;\n  content: string;\n}"
      },
      {
        "path": "types/user.type.ts",
        "content": "export interface User {\n  id: number;\n  username: string;\n}"
      },
      {
        "path": "controllers/post.controller.ts",
        "content": "import { Request, Response } from 'express';\nimport { Post } from '../types/post.type';\n\nexport const getAllPosts = (req: Request, res: Response) => {\n  const posts: Post[] = [{ id: 1, title: 'First Blog Post', content: 'Content here' }];\n  res.json(posts);\n};\n\nexport const createPost = (req: Request, res: Response) => {\n  const { title, content } = req.body;\n  const newPost: Post = { id: 2, title, content };\n  res.status(201).json(newPost);\n};"
      },
      {
        "path": "controllers/user.controller.ts",
        "content": "import { Request, Response } from 'express';\nimport { User } from '../types/user.type';\n\nexport const getAllUsers = (req: Request, res: Response) => {\n  const users: User[] = [{ id: 1, username: 'admin' }];\n  res.json(users);\n};\n\nexport const createUser = (req: Request, res: Response) => {\n  const { username } = req.body;\n  const newUser: User = { id: 2, username };\n  res.status(201).json(newUser);\n};"
      },
      {
        "path": "routes/post.routes.ts",
        "content": "import { Router } from 'express';\nimport { getAllPosts, createPost } from '../controllers/post.controller';\n\nconst router = Router();\n\nrouter.get('/', getAllPosts);\nrouter.post('/', createPost);\n\nexport default router;"
      },
      {
        "path": "routes/user.routes.ts",
        "content": "import { Router } from 'express';\nimport { getAllUsers, createUser } from '../controllers/user.controller';\n\nconst router = Router();\n\nrouter.get('/', getAllUsers);\nrouter.post('/', createUser);\n\nexport default router;"
      },
      {
        "path": ".env",
        "content": "PORT=3000"
      },
      {
        "path": ".gitignore",
        "content": "node_modules/\ndist/\n.env"
      },
      {
        "path": "tsconfig.json",
        "content": "{\n  \"compilerOptions\": {\n    \"target\": \"ES6\",\n    \"module\": \"commonjs\",\n    \"outDir\": \"./dist\",\n    \"rootDir\": \"./\",\n    \"strict\": true,\n    \"esModuleInterop\": true\n  }\n}"
      }
    ]
  }
  